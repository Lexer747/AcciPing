# Default configuration copied from https://raw.githubusercontent.com/golangci/golangci-lint/master/.golangci.example.yml
# and tweaked.

# options for analysis running
run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 20m

  # sorts results by: filepath, line and column
  sort-results: true

linters-settings:
  lll:
    # Max line length, lines longer will be reported.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option.
    # Default: 120.
    line-length: 140
    tab-width: 2
  depguard:
    rules:
      prevent_unmaintained_packages:
        list-mode: lax # allow unless explicitly denied
        files:
          - $all
          - "!$test"
        allow:
          - $gostd
        deny:
          - pkg: golang.org/x/net/context
            desc: "now part of std, import 'context' instead"
          - pkg: io/ioutil
            desc: "replaced by io and os packages since Go 1.16: https://tip.golang.org/doc/go1.16#ioutil"
          - pkg: errors
            desc: "Use 'github.com/Lexer747/AcciPing/utils/errors' instead"
  goheader:
    values:
      regexp:
        # Define here regexp type values.
        # for example:
        AUTHOR: .*
    # The template use for checking.
    # Default: ""
    template: |-
              Use of this source code is governed by a GPL-2 license that can be found in the LICENSE file.

              Copyright {{ YEAR }} {{ AUTHOR }}

              SPDX-License-Identifier: GPL-2.0-only


linters:
  enable-all: true
  disable:
    - cyclop
    - errname
    - execinquery
    - exhaustruct
    - forbidigo
    - funlen
    - gci
    - gochecknoglobals
    - gocritic
    - godot
    - godox
    - gofumpt
    - gomnd
    - mnd
    - nlreturn
    - nonamedreturns
    - revive
    - unparam
    - varnamelen
    - wrapcheck
    - wsl